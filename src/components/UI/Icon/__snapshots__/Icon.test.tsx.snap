// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Icons > render should render a icon correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Icon
    type="comment-dots"
    version="far"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <FontAwesomeIcon
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
                Array [
                        "far",
                        "comment-dots",
                      ]
        }
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        title=""
        transform={null}
/>,
      "className": "icon icon-far-comment-dots",
      "onClick": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "border": false,
        "className": "",
        "fixedWidth": false,
        "flip": null,
        "icon": Array [
          "far",
          "comment-dots",
        ],
        "inverse": false,
        "listItem": false,
        "mask": null,
        "pull": null,
        "pulse": false,
        "rotation": null,
        "size": null,
        "spin": false,
        "symbol": false,
        "title": "",
        "transform": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <FontAwesomeIcon
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
                    Array [
                              "far",
                              "comment-dots",
                            ]
          }
          inverse={false}
          listItem={false}
          mask={null}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          title=""
          transform={null}
/>,
        "className": "icon icon-far-comment-dots",
        "onClick": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "border": false,
          "className": "",
          "fixedWidth": false,
          "flip": null,
          "icon": Array [
            "far",
            "comment-dots",
          ],
          "inverse": false,
          "listItem": false,
          "mask": null,
          "pull": null,
          "pulse": false,
          "rotation": null,
          "size": null,
          "spin": false,
          "symbol": false,
          "title": "",
          "transform": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
